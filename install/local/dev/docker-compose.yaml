version: '3.8'

services:
  postgres:
    build:
      context: ../../..
      dockerfile: install/local/dev/postgres/Dockerfile
    environment:
      - "POSTGRES_DB=wikijump"
      - "POSTGRES_USER=wikijump"
      - "POSTGRES_PASSWORD=wikijump"
      - "POSTGRES_HOST_AUTH_METHOD=md5"
      - "POSTGRES_INITDB_ARGS=--locale en_US.UTF-8"
    ports:
      - "5432:5432"
    restart: always
    healthcheck:
      test: ["CMD", "wikijump-health-check"]
      interval: 10s
      timeout: 5s
      retries: 6

  minio:
    build: minio
    restart: always
    environment:
      - "MINIO_ROOT_USER=minio"
      - "MINIO_ROOT_PASSWORD=defaultpassword"
      - "MINIO_REGION_NAME=local"
      - "INITIAL_BUCKETS=deepwell-files"
      - "DATA_DIR=/data"  # You can add a volume for /data if you wish
    healthcheck:
      test: ["CMD", "/healthcheck.sh"]
      interval: 10s
      timeout: 5s
      retries: 3
    ports:
      - "9000:9000"
      - "9001:9001"

  redis:
    build: redis
    restart: always
    # You can add a volume for /data if you wish
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
    ports:
      - "6379:6379"

  deepwell:
    build:
      context: ../../..
      dockerfile: install/local/dev/deepwell/Dockerfile
    ports:
      - "2747:2747"
    links:
      - cache
      - database
      - files
    environment:
      - "DATABASE_URL=postgres://wikijump:wikijump@database/wikijump"
      - "REDIS_URL=redis://cache"
      - "S3_BUCKET=deepwell-files"
      - "S3_REGION_NAME=local"
      - "S3_PATH_STYLE=true"
      - "S3_CUSTOM_ENDPOINT=http://files:9000"
      - "S3_ACCESS_KEY_ID=minio"
      - "S3_SECRET_ACCESS_KEY=defaultpassword"
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "-X", "POST", "--json", '{"jsonrpc":"2.0","method":"ping","id":9000}', "http://localhost:2747/jsonrpc"]
      interval: 120s
      timeout: 2s
      retries: 3
    depends_on:
      redis:
        condition: service_healthy
      postgres:
        condition: service_healthy
      minio:
        condition: service_healthy

  framerail:
    build:
      context: ../../..
      dockerfile: install/local/dev/framerail/Dockerfile
    ports:
      - "3000:3000"
    links:
      - deepwell
    environment:
      - "DEEPWELL_HOST=deepwell"
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-If", "http://localhost:3000/"]
      interval: 120s
      timeout: 2s
      retries: 3

  nginx:
    build:
      context: ../../..
      dockerfile: install/local/dev/nginx/Dockerfile
    ports:
      - "80:80"
      - "443:443"
    links:
      - framerail
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-If", "http://localhost/"]
      interval: 120s
      timeout: 1s
      retries: 3
